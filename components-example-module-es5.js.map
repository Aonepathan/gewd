{"version":3,"sources":["webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/auto-scale.component.scss","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/auto-scale.component.ts","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/auto-scale.module.ts","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/index.ts","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/public_api.ts","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/value-or-default.pipe.ts","webpack:///home/runner/work/gewd/gewd/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","webpack:///home/runner/work/gewd/gewd/libs/components/auto-scale/auto-scale.component.html","webpack:///src/app/examples/components-example/components-example.component.html","webpack:///src/app/examples/components-example/components-example.component.css","webpack:///src/app/examples/components-example/components-example.component.ts","webpack:///src/app/examples/components-example/components-example.module.ts"],"names":["AutoScaleComponent","width","height","selector","template","AutoScaleModule","declarations","exports","imports","ValueOrDefaultPipe","value","defaultValue","isFinite","name","_c0","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","_elementRef","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_animationMode","_ngZone","document","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","event","disabled","isTouchEvent","button","_runInsideZone","oldValue","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","_emitChangeEvent","_pointerMove","_pointerUp","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","x","y","_windowBlur","_document","parseInt","_runOutsizeZone","element","nativeElement","addEventListener","v","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","parseFloat","toFixed","displayWith","options","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_thumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","styles","side","_invertAxis","invertOffset","monitor","subscribe","origin","detectChanges","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","keyCode","_increment","max","min","triggerEvent","body","isTouch","moveEventName","endEventName","window","numSteps","step","pos","top","left","size","posComponent","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","focus","blur","fn","run","runOutsideAngular","isDisabled","ɵfac","MatSlider_Factory","t","ɵcmp","type","selectors","viewQuery","MatSlider_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","$event","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","inputs","color","outputs","exportAs","features","decls","vars","consts","MatSlider_Template","_trackBackgroundStyles","_trackFillStyles","_ticksContainerStyles","_ticksStyles","_thumbContainerStyles","displayValue","directives","encapsulation","changeDetection","ctorParameters","decorators","String","args","undefined","propDecorators","providers","host","None","OnPush","point","touches","changedTouches","clientX","clientY","MatSliderModule","ɵmod","ɵinj","factory","MatSliderModule_Factory","ngJitMode","ComponentsExampleComponent","ComponentsExampleModule","componentType"],"mappings":"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","file":"components-example-module-es5.js","sourcesContent":["export default \":host {\\n  display: block;\\n  height: var(--zoom_out_height);\\n  width: var(--zoom_out_width);\\n  --scale-width: 0;\\n  --scale-height: 0;\\n}\\n\\n.zoom_out_parent {\\n  position: relative;\\n  height: var(--zoom_out_height);\\n  width: var(--zoom_out_width);\\n  overflow: hidden;\\n}\\n\\n.zoom_out {\\n  text-align: center;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translate(-50%, -50%) scale(min(var(--scale-width), var(--scale-height)));\\n  transform-origin: center center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dld2QvZ2V3ZC9saWJzL2NvbXBvbmVudHMvYXV0by1zY2FsZS9hdXRvLXNjYWxlLmNvbXBvbmVudC5zY3NzIiwibGlicy9jb21wb25lbnRzL2F1dG8tc2NhbGUvYXV0by1zY2FsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFFQSw4QkFBQTtFQUNBLDRCQUFBO0VBRUEsZ0JBQUE7RUFDQSxpQkFBQTtBQ0RGOztBREtBO0VBQ0Usa0JBQUE7RUFDQSw4QkFBQTtFQUNBLDRCQUFBO0VBRUEsZ0JBQUE7QUNIRjs7QURNQTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLG9GQUFBO0VBSUEsK0JBQUE7QUNORiIsImZpbGUiOiJsaWJzL2NvbXBvbmVudHMvYXV0by1zY2FsZS9hdXRvLXNjYWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcblxuICBoZWlnaHQ6IHZhcigtLXpvb21fb3V0X2hlaWdodCk7XG4gIHdpZHRoOiB2YXIoLS16b29tX291dF93aWR0aCk7XG5cbiAgLS1zY2FsZS13aWR0aDogMDtcbiAgLS1zY2FsZS1oZWlnaHQ6IDA7XG59XG5cblxuLnpvb21fb3V0X3BhcmVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiB2YXIoLS16b29tX291dF9oZWlnaHQpO1xuICB3aWR0aDogdmFyKC0tem9vbV9vdXRfd2lkdGgpO1xuXG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi56b29tX291dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZShtaW4oXG4gICAgdmFyKC0tc2NhbGUtd2lkdGgpLFxuICAgIHZhcigtLXNjYWxlLWhlaWdodClcbiAgKSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG59XG4iLCI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IHZhcigtLXpvb21fb3V0X2hlaWdodCk7XG4gIHdpZHRoOiB2YXIoLS16b29tX291dF93aWR0aCk7XG4gIC0tc2NhbGUtd2lkdGg6IDA7XG4gIC0tc2NhbGUtaGVpZ2h0OiAwO1xufVxuXG4uem9vbV9vdXRfcGFyZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IHZhcigtLXpvb21fb3V0X2hlaWdodCk7XG4gIHdpZHRoOiB2YXIoLS16b29tX291dF93aWR0aCk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi56b29tX291dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZShtaW4odmFyKC0tc2NhbGUtd2lkdGgpLCB2YXIoLS1zY2FsZS1oZWlnaHQpKSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG59Il19 */\";","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'gewd-auto-scale',\n  templateUrl: './auto-scale.component.html',\n  styleUrls: ['./auto-scale.component.scss']\n})\nexport class AutoScaleComponent implements OnInit {\n\n  @HostBinding('style.--zoom_out_width.px')\n  @Input()\n  width = 100;\n\n  @HostBinding('style.--zoom_out_height.px')\n  @Input()\n  height = 100;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AutoScaleComponent} from \"./auto-scale.component\";\nimport {ValueOrDefaultPipe} from './value-or-default.pipe';\n\n\n@NgModule({\n  declarations: [AutoScaleComponent, ValueOrDefaultPipe],\n  exports: [\n    AutoScaleComponent\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class AutoScaleModule { }\n","export * from './public_api';\n","export * from './auto-scale.module';\nexport * from './auto-scale.component';\nexport * from './value-or-default.pipe';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'valueOrDefault'\n})\nexport class ValueOrDefaultPipe implements PipeTransform {\n\n  transform(value: number, defaultValue: number): number {\n    if (!isFinite(value)) {\n      return defaultValue;\n    }\n    return value;\n  }\n\n}\n","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, Inject, NgZone, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n * @type {?}\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n * @type {?}\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlider)),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\nif (false) {\n    /**\n     * The MatSlider that changed.\n     * @type {?}\n     */\n    MatSliderChange.prototype.source;\n    /**\n     * The new value of the source slider.\n     * @type {?}\n     */\n    MatSliderChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSlider.\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSliderBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     * @param {?=} _ngZone\n     * @param {?=} document\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _animationMode, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._ngZone = _ngZone;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Called when the user has put their pointer down on the slider.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._runInsideZone((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const oldValue = this.value;\n                /** @type {?} */\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            }));\n        });\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                /** @type {?} */\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        });\n        /**\n         * Called when the user has lifted their pointer. Bound on the document level.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                /** @type {?} */\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                /** @type {?} */\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        });\n        /**\n         * Called when the window has lost focus.\n         */\n        this._windowBlur = (/**\n         * @return {?}\n         */\n        () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        });\n        this._document = document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._runOutsizeZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        }));\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = (/** @type {?} */ (this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, (/** @type {?} */ (this._tickInterval)));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith((/** @type {?} */ (this.value)));\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const percent = this.percent;\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side;\n            if (this.vertical) {\n                side = this._invertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = this._invertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @private\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        (origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        }));\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     * @private\n     * @param {?} triggerEvent\n     * @return {?}\n     */\n    _bindGlobalEvents(triggerEvent) {\n        if (typeof this._document !== 'undefined' && this._document) {\n            /** @type {?} */\n            const body = this._document.body;\n            /** @type {?} */\n            const isTouch = isTouchEvent(triggerEvent);\n            /** @type {?} */\n            const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const endEventName = isTouch ? 'touchend' : 'mouseup';\n            body.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n            body.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n            if (isTouch) {\n                body.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n            }\n        }\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Removes any global event listeners that we may have added.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalEvents() {\n        if (typeof this._document !== 'undefined' && this._document) {\n            /** @type {?} */\n            const body = this._document.body;\n            body.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n            body.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n            body.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n            body.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n            body.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @private\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @private\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @private\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @private\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @private\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @private\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @private\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Blurs the native element.\n     * @private\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Runs a callback inside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runInsideZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.run(fn) : fn();\n    }\n    /**\n     * Runs a callback outside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runOutsizeZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_invert;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_max;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_min;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_step;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_thumbLabel;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_tickInterval;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_value;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._invert;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._step;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._thumbLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._value;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     * @type {?}\n     */\n    MatSlider.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._vertical;\n    /**\n     * Event emitted when the slider value has changed.\n     * @type {?}\n     */\n    MatSlider.prototype.change;\n    /**\n     * Event emitted when the slider thumb moves.\n     * @type {?}\n     */\n    MatSlider.prototype.input;\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSlider.prototype.valueChange;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatSlider.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._percent;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     * @type {?}\n     */\n    MatSlider.prototype._isSliding;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     * @type {?}\n     */\n    MatSlider.prototype._isActive;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickIntervalPercent;\n    /**\n     * The dimensions of the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._controlValueAccessorChangeFn;\n    /**\n     * Decimal places to round to, based on the step amount.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._roundToDecimal;\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dirChangeSubscription;\n    /**\n     * The value of the slider when the slide start event fires.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._valueOnSlideStart;\n    /**\n     * Position of the pointer when the dragging started.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerPositionOnStart;\n    /**\n     * Reference to the inner slider wrapper element.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderWrapper;\n    /**\n     * Keeps track of the last pointer event that was captured by the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._lastPointerEvent;\n    /**\n     * Used to subscribe to global move and end events\n     * @type {?}\n     * @protected\n     */\n    MatSlider.prototype._document;\n    /**\n     * Called when the user has put their pointer down on the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerDown;\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerMove;\n    /**\n     * Called when the user has lifted their pointer. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerUp;\n    /**\n     * Called when the window has lost focus.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._windowBlur;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dir;\n    /** @type {?} */\n    MatSlider.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._ngZone;\n}\n/**\n * Returns whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the coordinates of a touch or mouse event relative to the viewport.\n * @param {?} event\n * @return {?}\n */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    /** @type {?} */\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","export default \"<div class=\\\"zoom_out_parent\\\">\\n  <div class=\\\"zoom_out\\\" #zoomOutElement\\n   [style.--scale-width]=\\\"(width / zoomOutElement.scrollWidth)| valueOrDefault: 1\\\"\\n         [style.--scale-height]=\\\"(height / zoomOutElement.scrollHeight) |valueOrDefault: 1\\\"\\n  >\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\";","export default \"<gewd-auto-scale [width]=\\\"outerSize.value\\\" [height]=\\\"outerSize.value\\\">\\n  <div style=\\\"background: green;\\\"\\n  [style.width.px]=\\\"innerSize.value\\\"\\n  [style.height.px]=\\\"innerSize.value\\\"\\n  >\\n    200x200 <br/> Inner\\n  </div>\\n</gewd-auto-scale>\\n\\n<br/>\\n\\n  <mat-label>Outer Size: {{outerSize.value}}px</mat-label>\\n  <mat-slider min=\\\"100\\\" max=\\\"400\\\" #outerSize>\\n  </mat-slider>\\n\\n\\n<br />\\n<mat-label>Inner Size: {{innerSize.value}}px</mat-label>\\n<mat-slider min=\\\"100\\\" max=\\\"400\\\" value=\\\"200\\\" #innerSize>\\n</mat-slider>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2RlbW8vc3JjL2FwcC9leGFtcGxlcy9jb21wb25lbnRzLWV4YW1wbGUvY29tcG9uZW50cy1leGFtcGxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'gewd-components-example',\n  templateUrl: './components-example.component.html',\n  styleUrls: ['./components-example.component.css']\n})\nexport class ComponentsExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsExampleComponent } from './components-example.component';\nimport {AutoScaleModule} from \"@gewd/components/auto-scale\";\nimport {LazyModule, LazyModuleComponentInfo} from \"@gewd/lazy/contracts\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\n\n@NgModule({\n  declarations: [ComponentsExampleComponent],\n  imports: [\n    CommonModule,\n    AutoScaleModule,\n    AutoScaleModule,\n    AutoScaleModule,\n    MatSliderModule,\n    MatFormFieldModule\n  ]\n})\nexport class ComponentsExampleModule implements LazyModule {\n  getComponents (): LazyModuleComponentInfo[] {\n    return [\n      {\n        name: 'ComponentsExample',\n        componentType: ComponentsExampleComponent\n      }\n    ];\n  }\n\n\n}\n\n"]}